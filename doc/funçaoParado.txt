
const long delayParado = 40 * 60 * 1000; // 40 minutos em milissegundos
float latInicial, lonInicial;
bool parado = false;
unsigned long tempoInicialParado = 0;



void loop() {
  while (gpsSerial.available()) {
    gps.encode(gpsSerial.read());
    
    if (gps.location.isValid()) {
      float latAtual = gps.location.lat();
      float lonAtual = gps.location.lng();
      
      // Quando o rastreador se move
      if (!parado && distanceBetween(latInicial, lonInicial, latAtual, lonAtual) > 5) {
        latInicial = latAtual;
        lonInicial = lonAtual;
        tempoInicialParado = millis(); // Reinicia o tempo de parada
        parado = false;
      }

      // Verifica se o rastreador está parado por mais de 40 minutos
      if (distanceBetween(latInicial, lonInicial, latAtual, lonAtual) <= 5) {
        if (!parado && millis() - tempoInicialParado >= delayParado) {
          enviarSMS(latAtual, lonAtual, "O rastreador está parado.");
          parado = true;
        }
      }
    }
  }
}

float distanceBetween(float lat1, float lon1, float lat2, float lon2) {
  // Fórmula para calcular a distância entre dois pontos GPS em metros
  float R = 6371000; // Raio da Terra em metros
  float dLat = radians(lat2 - lat1);
  float dLon = radians(lon2 - lon1);
  float a = sin(dLat / 2) * sin(dLat / 2) +
            cos(radians(lat1)) * cos(radians(lat2)) *
            sin(dLon / 2) * sin(dLon / 2);
  float c = 2 * atan2(sqrt(a), sqrt(1 - a));
  return R * c;
}

void enviarSMS(float lat, float lon, const char* mensagem) {
  String sms = String(mensagem) + " Localização: https://maps.google.com/?q=" + String(lat, 6) + "," + String(lon, 6);
  
  // Código para enviar SMS usando o módulo SIM800
  Serial.println("Enviando SMS: " + sms);
  // modem.sendSMS(sms.c_str()); // Implemente com sua biblioteca de modem
}
